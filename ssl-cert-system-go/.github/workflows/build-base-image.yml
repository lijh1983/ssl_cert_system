name: Build Base Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'ssl-cert-system-go/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'ssl-cert-system-go/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ssl-cert-system-base

jobs:
  build-base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push base image
      uses: docker/build-push-action@v5
      with:
        context: ./ssl-cert-system-go
        file: ./ssl-cert-system-go/Dockerfile.base
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=1.0.2
          BUILD_TIME=${{ github.event.head_commit.timestamp }}
          GIT_COMMIT=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test base image
      run: |
        docker run --rm -d --name test-container \
          -e NODE_ENV=test \
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
        
        sleep 10
        
        # Test health check
        docker exec test-container curl -f http://localhost:3001/health || exit 1
        
        # Test version
        docker exec test-container ./ssl-cert-system --version
        
        # Cleanup
        docker stop test-container
