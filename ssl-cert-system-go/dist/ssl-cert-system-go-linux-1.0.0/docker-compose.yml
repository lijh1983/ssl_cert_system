version: '3.8'

services:
  # SSL证书管理系统 - Go版本
  ssl-cert-system:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ssl-cert-system-go
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=ssl_cert_system
      - DB_USER=ssl_manager
      - DB_PASSWORD=${DB_PASSWORD:-your_secure_password_here}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here_change_in_production}
      - ACME_SERVER=https://acme-v02.api.letsencrypt.org/directory
      - ACME_EMAIL=${ACME_EMAIL:-your_email@domain.com}
      - ACME_STORAGE_PATH=/app/storage/certs
      - LOG_LEVEL=info
    volumes:
      - ssl_certs:/app/storage/certs
      - ssl_logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ssl_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: ssl-mysql-go
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password_change_me}
      - MYSQL_DATABASE=ssl_cert_system
      - MYSQL_USER=ssl_manager
      - MYSQL_PASSWORD=${DB_PASSWORD:-your_secure_password_here}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3306:3306"
    networks:
      - ssl_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: ssl-redis-go
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - ssl_network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your_redis_password_here}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  ssl_certs:
    driver: local
  ssl_logs:
    driver: local

networks:
  ssl_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
